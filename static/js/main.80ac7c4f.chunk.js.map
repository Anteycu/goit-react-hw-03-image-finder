{"version":3,"sources":["components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loaders.js","components/Notification.js","helpers/imagesApi.js","components/SearchBar/SearchBar.js","components/Button/Button.js","components/App.js","index.js"],"names":["Modal","handleKeyDown","e","code","props","onClose","window","addEventListener","this","removeEventListener","className","src","largeImageURL","alt","Component","ImageGalleryItem","url","title","toggleModal","id","onClick","ImageGallery","images","map","webformatURL","tags","key","Loaders","message","type","color","height","width","Notification","apiKey","fetchImagesWithQuery","searchQuery","page","axios","get","then","response","data","hits","SearchBar","state","inputValue","handleChange","setState","target","value","handleSubmit","preventDefault","onSubmit","autoComplete","autoFocus","placeholder","onChange","Button","handleFetch","scrollTo","top","document","documentElement","scrollHeight","behavior","App","loading","showModal","error","setLargeImage","largeImageUrl","fetchImages","prevState","console","log","catch","finally","handleSearchBarSubmit","query","prevProps","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.80ac7c4f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Modal.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Modal extends Component {\r\n  static propTypes = {\r\n    largeImageURL: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nexport function ImageGalleryItem({\r\n  url,\r\n  title,\r\n  toggleModal,\r\n  id,\r\n  largeImageURL,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => toggleModal(largeImageURL)}>\r\n      <img src={url} alt={title} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string,\r\n  title: PropTypes.string,\r\n  toggleModal: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport \"./ImageGallery.css\";\r\n\r\nexport const ImageGallery = ({ images, toggleModal }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        url={webformatURL}\r\n        largeImageURL={largeImageURL}\r\n        title={tags}\r\n        toggleModal={toggleModal}\r\n        id={id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport function Loaders({ message }) {\r\n  return (\r\n    <>\r\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nLoaders.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Notification({ message }) {\r\n  return <div>{message}</div>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst apiKey = \"17976962-b1f0a6808ca31d6d2a32d8551\";\r\n// const apiKeyNew = \"18309325-d7831a9dfba8f225a0a4fcbba\";\r\n\r\nexport const fetchImagesWithQuery = (searchQuery, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SearchBar.css\";\r\n\r\nexport class SearchBar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={inputValue}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nwindow.scrollTo({\r\n  top: document.documentElement.scrollHeight,\r\n  behavior: \"smooth\",\r\n});\r\n\r\nexport function Button({ handleFetch }) {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={handleFetch}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  handleFetch: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\nimport { Modal } from \"./Modal/Modal\";\nimport { ImageGallery } from \"./ImageGallery/ImageGallery\";\nimport { Loaders } from \"./Loader/Loaders\";\nimport { Notification } from \"./Notification\";\nimport { fetchImagesWithQuery } from \"../helpers/imagesApi\";\nimport { SearchBar } from \"./SearchBar/SearchBar\";\nimport { Button } from \"./Button/Button\";\n\nexport class App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    showModal: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    largeImageURL: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n  }\n\n  toggleModal = (largeImageURL) => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n      largeImageURL,\n    }));\n  };\n\n  setLargeImage = (url) => {\n    this.setState({ largeImageUrl: url });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    fetchImagesWithQuery(searchQuery, page)\n      .then((images) =>\n        this.setState(\n          (prevState) => ({\n            images: [...prevState.images, ...images],\n            page: prevState.page + 1,\n          }),\n          console.log(images)\n        )\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSearchBarSubmit = (query) => {\n    this.setState({ searchQuery: query, page: 1, images: [] });\n  };\n\n  render() {\n    const { showModal, loading, images, error, largeImageURL } = this.state;\n\n    return (\n      <>\n        <SearchBar onSubmit={this.handleSearchBarSubmit} />\n\n        {error && (\n          <Notification\n            message={`Whoops, some trouble on horizont: ${error.message}`}\n          />\n        )}\n\n        {images.length > 0 && (\n          <ImageGallery images={images} toggleModal={this.toggleModal} />\n        )}\n\n        {loading && <Loaders message=\"Loading...\" />}\n\n        {images.length > 0 && !loading && (\n          <Button handleFetch={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal\n            largeImageURL={largeImageURL}\n            onClose={this.toggleModal}\n          ></Modal>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}